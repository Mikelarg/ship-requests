{"version":3,"sources":["utils/utils.js","components/SampleSplitter.js","actions/index.js","reducers/requests.js","reducers/addresses.js","reducers/index.js","components/propTypes.js","components/EditableAddressCell.js","components/RequestsTable.js","components/RoutineMachine.js","components/Map.js","components/App.js","reportWebVitals.js","api/index.js","sagas/index.js","store.js","index.js"],"names":["cn","args","filter","Boolean","join","SampleSplitter","id","dir","isDragging","props","useState","isFocused","setIsFocused","tabIndex","className","onFocus","onTouchStart","onBlur","onTouchEnd","GET_ALL_REQUESTS","UPDATE_REQUEST","RECEIVE_REQUESTS","GET_ALL_ADDRESSES","RECEIVE_ADDRESSES","SET_CURRENT_REQUEST","receiveRequests","requests","type","receiveAddresses","addresses","state","action","reduce","obj","request","requestId","address_from_id","addressFrom","address_from","address_to_id","addressTo","address_to","address","combineReducers","getRequestsWithAddresses","Object","values","value","Address","PropTypes","objectOf","shape","number","isRequired","name","string","lat","lon","Request","connect","filterId","currentId","form","editing","dataIndex","record","title","children","index","onChange","table","forceUpdate","restProps","toString","options","keys","el","map","key","label","Item","style","margin","shouldUpdate","prevValues","curValues","defaultValue","setFieldsValue","parseInt","currentRequest","setCurrentRequest","updateRequest","Form","useForm","requestsValues","rowSelection","selectedRowKeys","editingKey","setEditingKey","editingAddressFrom","setEditingAddressFrom","editingAddressTo","setEditingAddressTo","isEditing","cancel","save","errInfo","console","log","mergedColumns","editable","render","item","_","Link","onClick","onConfirm","disabled","edit","col","onCell","onAddressChange","columns","dataSource","pagination","rowKey","rowClassName","components","body","cell","createRoutineMachineLayer","useMap","useEffect","wayPoints","length","L","latLng","instance","Routing","control","waypoints","createMarker","i","wp","nWps","text","myIcon","divIcon","html","icon","marker","lineOptions","styles","color","weight","show","addWaypoints","routeWhileDragging","draggableWaypoints","fitSelectedRoutes","showAlternatives","addTo","removeControl","propTypes","RoutineMachine","DefaultIcon","iconUrl","shadowUrl","iconShadow","Marker","prototype","position","Map","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Header","Layout","App","useResizable","axis","initial","min","max","isFileDragging","fileW","fileDragBarProps","splitterProps","minHeight","DatabaseOutlined","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","Promise","resolve","setTimeout","_request","data","_addresses","getAllRequests","watchGetProducts","getAllAddresses","watchGetAddresses","root","call","put","actions","takeEvery","all","fork","reducer","addressesReducer","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","logger","devTools","process","run","rootSaga","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.954be25f.chunk.js","sourcesContent":["export const cn = (...args) => args.filter(Boolean).join(\" \");\nexport const isEmpty = (obj) => Object.keys(obj).length === 0;\n","import React, {useState} from 'react'\nimport {cn} from \"../utils/utils\";\n\nimport '../styles/SampleSplitter.css';\n\nconst SampleSplitter = ({\n                            id = 'drag-bar',\n                            dir,\n                            isDragging,\n                            ...props\n                        }) => {\n    const [isFocused, setIsFocused] = useState(false);\n\n    return (\n        <div\n            id={id}\n            data-testid={id}\n            tabIndex={0}\n            className={cn(\n                'sample-drag-bar',\n                dir === 'horizontal' && 'sample-drag-bar--horizontal',\n                (isDragging || isFocused) && 'sample-drag-bar--dragging'\n            )}\n            onFocus={() => setIsFocused(true)}\n            onTouchStart={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            onTouchEnd={() => setIsFocused(false)}\n            {...props}\n        />\n    )\n};\n\nexport default SampleSplitter\n","export const GET_ALL_REQUESTS = 'GET_ALL_REQUESTS';\nexport const UPDATE_REQUEST = 'UPDATE_REQUEST';\nexport const RECEIVE_REQUESTS = 'RECEIVE_REQUESTS';\n\nexport const GET_ALL_ADDRESSES = 'GET_ALL_REQUESTS';\nexport const RECEIVE_ADDRESSES = 'RECEIVE_ADDRESSES';\n\nexport const SET_CURRENT_REQUEST = 'SET_CURRENT_REQUEST';\n\nexport function getAllRequests() {\n    return {\n        type: GET_ALL_REQUESTS,\n    }\n}\n\nexport function receiveRequests(requests) {\n    return {\n        type: RECEIVE_REQUESTS,\n        requests,\n    }\n}\n\nexport function updateRequest(requestId, addressFrom, addressTo) {\n    return {\n        type: UPDATE_REQUEST,\n        requestId,\n        addressFrom,\n        addressTo\n    }\n}\n\n\nexport function getAllAddresses() {\n    return {\n        type: GET_ALL_ADDRESSES,\n    }\n}\n\nexport function receiveAddresses(addresses) {\n    return {\n        type: RECEIVE_ADDRESSES,\n        addresses,\n    }\n}\n\nexport function setCurrentRequest(request) {\n    return {\n        type: SET_CURRENT_REQUEST,\n        request,\n    }\n}\n","import {RECEIVE_REQUESTS, UPDATE_REQUEST, SET_CURRENT_REQUEST} from '../actions'\n\nconst requests = (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVE_REQUESTS:\n            return {\n                ...action.requests.reduce((obj, request) => {\n                    obj[request.id] = request;\n                    return obj\n                }, {}),\n            };\n        case UPDATE_REQUEST:\n            return {\n                ...state,\n                [action.requestId]: {\n                    ...state[action.requestId],\n                    address_from_id: action.addressFrom.id,\n                    address_from: action.addressFrom,\n                    address_to_id: action.addressTo.id,\n                    address_to: action.addressTo,\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nconst currentRequest = (state = {}, action) => {\n    switch (action.type) {\n        case SET_CURRENT_REQUEST:\n            return {...action.request};\n        case UPDATE_REQUEST:\n            if (state.id === action.requestId) {\n                return {\n                    ...state,\n                    address_from_id: action.addressFrom.id,\n                    address_from: action.addressFrom,\n                    address_to_id: action.addressTo.id,\n                    address_to: action.addressTo,\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport {currentRequest, requests};\nexport default requests;\n","import { RECEIVE_ADDRESSES } from '../actions'\n\nconst addresses = (state = {}, action) => {\n    switch (action.type) {\n        case RECEIVE_ADDRESSES:\n            return {\n                ...state,\n                ...action.addresses.reduce((obj, address) => {\n                    obj[address.id] = address;\n                    return obj\n                }, {}),\n            };\n        default:\n            return state;\n    }\n};\n\nexport default addresses;\n","import { combineReducers } from 'redux';\nimport requests from \"./requests\";\nimport addresses from \"./addresses\";\n\nconst mainReducer = combineReducers({\n    requests,\n    addresses,\n});\n\nexport function getRequestsWithAddresses(state) {\n    const requests = {...state.requests};\n    for (const value of Object.values(requests)) {\n        value.address_from = state.addresses[value.address_from_id];\n        value.address_to = state.addresses[value.address_to_id];\n    }\n    return requests;\n}\n\nexport default function root(state, action) {\n    return mainReducer(state, action)\n}\n","import PropTypes from \"prop-types\";\n\nexport const Address = PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    lat: PropTypes.number.isRequired,\n    lon: PropTypes.number.isRequired\n}));\n\nexport const Request = PropTypes.objectOf(\n    PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        address_from_id: PropTypes.number.isRequired,\n        address_from: Address.isRequired,\n        address_to_id: PropTypes.number.isRequired,\n        address_to: Address.isRequired,\n    }),\n);","import {Form, Select} from 'antd';\nimport React from 'react';\nimport {connect} from \"react-redux\";\n\nconst EditableAddressCell = ({\n                                 form, editing, dataIndex, title,\n                                 record, index, children, addresses,\n                                 addressTo = '', addressFrom = '', table, forceUpdate, onChange,\n                                 ...restProps\n                             }) => {\n    let filterId;\n    let currentId;\n    if (record) {\n        if (dataIndex === 'address_from') {\n            [currentId, filterId] = [addressFrom.toString(), addressTo ? addressTo.toString() : record.address_to_id.toString()]\n        } else {\n            [currentId, filterId] = [addressTo.toString(), addressFrom ? addressFrom.toString() : record.address_from_id.toString()];\n        }\n    }\n    const options = Object.keys(addresses).filter(el => el !== filterId).map((key, index) => ({\n        label: addresses[key].name,\n        value: key\n    }));\n    const handleChange = (value) => {\n        form.setFieldsValue({[dataIndex]: parseInt(value)});\n        onChange(dataIndex, value)\n    };\n\n    return (\n        <td {...restProps}>\n            {editing ? (\n                <Form.Item\n                    name={dataIndex}\n                    style={{\n                        margin: 0,\n                    }}\n                    shouldUpdate={(prevValues, curValues) => {\n                        return prevValues.address_from !== curValues.address_from || prevValues.address_to !== curValues.address_to\n                    }}\n                >\n                    <Select defaultValue={currentId}\n                            options={options} onChange={handleChange}>\n                    </Select>\n                </Form.Item>\n            ) : (\n                children\n            )}\n        </td>\n    );\n};\n\nexport default connect(state => ({addresses: state.addresses}))(EditableAddressCell);","import {Table, Form, Popconfirm, Typography} from \"antd\";\nimport React, {useState} from \"react\";\n\nimport '../styles/RequestsTable.css'\nimport {connect} from \"react-redux\";\nimport {getRequestsWithAddresses} from \"../reducers\";\nimport {setCurrentRequest, updateRequest} from \"../actions\";\nimport {Request} from \"./propTypes\";\nimport EditableAddressCell from \"./EditableAddressCell\";\n\nconst RequestsTable = (props) => {\n    const {addresses, updateRequest, setCurrentRequest, requests, currentRequest} = props;\n\n    const [form] = Form.useForm();\n\n    const requestsValues = Object.values(requests);\n    const selectedRowKeys = [currentRequest.id];\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: (key) => {\n            setCurrentRequest(requests[key])\n        },\n        type: 'radio'\n    };\n\n    const [editingKey, setEditingKey] = useState('');\n    // Принял решение хранить значения редактирования не в форме, так как обновление полей очень долго шло и портило\n    // юзер экспириенс\n    const [editingAddressFrom, setEditingAddressFrom] = useState('');\n    const [editingAddressTo, setEditingAddressTo] = useState('');\n\n    const isEditing = (record) => record.id === editingKey;\n\n    const edit = (record) => {\n        form.setFieldsValue({\n            address_from: record.address_from_id,\n            address_to: record.address_to_id,\n            ...record,\n        });\n        setEditingKey(record.id);\n        setEditingAddressFrom(record.address_from_id);\n        setEditingAddressTo(record.address_to_id);\n    };\n\n    const cancel = () => {\n        setEditingKey('');\n        setEditingAddressFrom('');\n        setEditingAddressTo('');\n    };\n\n    const save = async (key) => {\n        try {\n            updateRequest(editingKey, addresses[parseInt(editingAddressFrom)], addresses[parseInt(editingAddressTo)]);\n            setEditingKey('');\n            setEditingAddressFrom('');\n            setEditingAddressTo('');\n        } catch (errInfo) {\n            console.log('Validate Failed:', errInfo);\n        }\n    };\n\n    const columns = [\n        {\n            title: 'ID',\n            dataIndex: 'id',\n            key: 'id',\n            editable: false,\n        },\n        {\n            title: 'Имя',\n            dataIndex: 'name',\n            key: 'name',\n            editable: false,\n        },\n        {\n            title: 'Откуда',\n            dataIndex: 'address_from',\n            key: 'address_from',\n            render: item => item.name,\n            editable: true,\n            className: 'address_cell'\n        },\n        {\n            title: 'Куда',\n            dataIndex: 'address_to',\n            key: 'address_to',\n            render: item => item.name,\n            editable: true,\n            className: 'address_cell'\n        },\n        {\n            title: 'Действия',\n            key: 'action',\n            render: (_, record) => {\n                const editable = isEditing(record);\n                return editable ? (\n                    <span>\n                        <Typography.Link\n                            onClick={() => save(record.key)}\n                        >\n                          Сохранить\n                        </Typography.Link>\n                        <br/>\n                        <Popconfirm title=\"Уверенны, что хотите отменить изменения?\" onConfirm={cancel}>\n                          <a>Отменить</a>\n                        </Popconfirm>\n                    </span>\n                ) : (\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n                        Изменить\n                    </Typography.Link>\n                );\n            },\n        },\n    ];\n\n    const mergedColumns = columns.map((col) => {\n        if (!col.editable) {\n            return col;\n        }\n\n        return {\n            ...col,\n            onCell: (record) => ({\n                record,\n                dataIndex: col.dataIndex,\n                title: col.title,\n                editing: isEditing(record),\n            }),\n        };\n    });\n\n    const onAddressChange = (dataIndex, value) => {\n        if (dataIndex === 'address_from') {\n            setEditingAddressFrom(value);\n        } else {\n            setEditingAddressTo(value);\n        }\n    };\n\n    return (\n        <Table\n            columns={mergedColumns} dataSource={requestsValues}\n            pagination={false} className='requests-table'\n            rowSelection={rowSelection} rowKey=\"id\"\n            rowClassName=\"editable-row\"\n            components={{\n                body: {\n                    cell: (props) => <EditableAddressCell form={form} addressFrom={editingAddressFrom}\n                                                          addressTo={editingAddressTo} onChange={onAddressChange} {...props}/>,\n                },\n            }}\n        />\n    )\n};\n\nRequestsTable.propTypes = {\n    requests: Request.isRequired,\n    currentRequest: Request\n};\n\nexport default connect(state => ({\n    requests: getRequestsWithAddresses(state),\n    currentRequest: state.currentRequest,\n    addresses: state.addresses\n}), {setCurrentRequest, updateRequest})(RequestsTable)","import L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport {connect} from \"react-redux\";\nimport {Request} from \"./propTypes\";\nimport {isEmpty} from \"../utils/utils\";\nimport {useMap} from \"react-leaflet\";\nimport {useEffect} from \"react\";\nimport icon from 'leaflet/dist/images/marker-icon.png';\n\nconst createRoutineMachineLayer = (props) => {\n    const {currentRequest} = props;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const map = useMap();\n\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n        if (!map) return;\n        let wayPoints = [];\n        if (!isEmpty(currentRequest)) {\n            wayPoints = [\n                L.latLng(currentRequest.address_from.lat, currentRequest.address_from.lon),\n                L.latLng(currentRequest.address_to.lat, currentRequest.address_to.lon)\n            ]\n        }\n        const instance = L.Routing.control({\n            waypoints: wayPoints,\n            createMarker: function (i, wp, nWps) {\n                // here change all the others\n                let text = '';\n                if (i === 0) {\n                    text = 'Откуда'\n                } else {\n                    text = 'Куда'\n                }\n                let myIcon = L.divIcon({\n                    className: 'my-div-icon',\n                    html: `<img class=\"my-div-image\" src=\"${icon}\"/>` +\n                        `<span class=\"marker-span\">${text}</span>`\n                });\n                return L.marker(wp.latLng, {\n                    icon: myIcon\n                });\n            },\n            lineOptions: {\n                styles: [{color: \"#6FA1EC\", weight: 4}]\n            },\n            show: false,\n            addWaypoints: false,\n            routeWhileDragging: true,\n            draggableWaypoints: false,\n            fitSelectedRoutes: true,\n            showAlternatives: false\n        }).addTo(map);\n\n        return () => map.removeControl(instance);\n    }, [map, currentRequest]);\n    return null;\n};\n\ncreateRoutineMachineLayer.propTypes = {\n    currentRequest: Request\n};\n\nconst RoutineMachine = connect(state => ({\n    currentRequest: state.currentRequest\n}))(createRoutineMachineLayer);\n\nexport default RoutineMachine;\n","import React from 'react';\nimport { MapContainer, TileLayer} from 'react-leaflet'\nimport L from 'leaflet';\nimport RoutineMachine from \"./RoutineMachine\";\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nimport \"leaflet/dist/leaflet.css\";\nimport '../styles/Map.css'\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst position = [55.72578142274601, 37.6768037893193];\n\nexport default function Map() {\n    return (\n        <MapContainer center={position} zoom={13} scrollWheelZoom={false} className={\"flex grow\"}>\n            <TileLayer\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n                className='map-tiles'\n            />\n            <RoutineMachine />\n        </MapContainer>\n    );\n};","import React from 'react';\nimport {Layout} from 'antd';\nimport {useResizable} from 'react-resizable-layout';\nimport {DatabaseOutlined} from \"@ant-design/icons\";\nimport SampleSplitter from \"./SampleSplitter\";\nimport RequestsTable from \"./RequestsTable\";\nimport Map from \"./Map\";\n\nimport \"antd/dist/antd.css\";\nimport \"antd/dist/antd.dark.css\";\nimport '../styles/App.css';\n\nconst {Header} = Layout;\n\n\nfunction App() {\n    const {\n        isDragging: isFileDragging,\n        position: fileW,\n        splitterProps: fileDragBarProps\n    } = useResizable({\n        axis: \"x\",\n        initial: 540,\n        min: 300,\n        max: 1000\n    });\n    return (\n        <Layout\n            style={{\n                minHeight: '100vh',\n            }}\n        >\n            <Header className=\"header\">\n                <h1><DatabaseOutlined className=\"icon\" />Заявки</h1>\n            </Header>\n            <Layout>\n                <div className=\"site-layout flex grow\">\n                    <div className={\"shrink-0 requests\"} style={{width: fileW}}>\n                        <RequestsTable/>\n                    </div>\n                    <SampleSplitter isDragging={isFileDragging} {...fileDragBarProps} />\n                    <div className={\"flex grow\"}>\n                        <Map/>\n                    </div>\n                </div>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import _request from './requests'\nimport _addresses from './addresses'\n\nconst TIMEOUT = 200;\n\nexport const api = {\n    getRequests() {\n        return new Promise(resolve => {\n            setTimeout(() => resolve(_request.data), TIMEOUT)\n        })\n    },\n    getAddresses() {\n        return new Promise(resolve => {\n            setTimeout(() => resolve(_addresses.data), TIMEOUT)\n        })\n    },\n}","import { put, call, fork, takeEvery, all } from 'redux-saga/effects'\nimport * as actions from '../actions'\nimport { api } from '../api'\n\nexport function* getAllRequests() {\n    const requests = yield call(api.getRequests);\n    yield put(actions.receiveRequests(requests))\n}\n\nexport function* watchGetProducts() {\n    yield takeEvery(actions.GET_ALL_REQUESTS, getAllRequests)\n}\n\nexport function* getAllAddresses() {\n    const addresses = yield call(api.getAddresses);\n    yield put(actions.receiveAddresses(addresses))\n}\n\nexport function* watchGetAddresses() {\n    yield takeEvery(actions.GET_ALL_ADDRESSES, getAllAddresses)\n}\n\nexport default function* root() {\n    yield getAllAddresses();\n    yield getAllRequests();\n    yield all([fork(watchGetProducts), fork(watchGetAddresses)])\n}\n","import {configureStore} from '@reduxjs/toolkit'\nimport createSagaMiddleware from 'redux-saga'\n\nimport logger from 'redux-logger'\nimport rootSaga from './sagas'\nimport {requests, currentRequest} from \"./reducers/requests\";\nimport addressesReducer from \"./reducers/addresses\";\n\nconst reducer = {\n    addresses: addressesReducer,\n    requests,\n    currentRequest\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n    reducer,\n    middleware: [logger, sagaMiddleware],\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from 'react';\nimport './index.css';\nimport App from './components/App';\nimport * as ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(<React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}